// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Service{
  id String    @id @default(auto()) @map("_id") @db.ObjectId
  title String?
  subTitle String?
  img String?
  category String?
}

model SubService{
  id String    @id @default(auto()) @map("_id") @db.ObjectId
  title String?
  subTitle String?
  img String?
  category String?
  reviewimg String?
  reviewdetail String?
  price String?
}


model Review{
  id String    @id @default(auto()) @map("_id") @db.ObjectId
  title String?
  title2 String?
  category String?
  subTitle String?
  img String?
  reviewImg String?
  reviewDetail String?
  reviewerName String?
  date  DateTime? 
}

model Promotion{
  id String    @id @default(auto()) @map("_id") @db.ObjectId
  title String?
  img String?
  date DateTime?
}

model AboutClinic {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String?
  subTitle   String?
  detail1    String?
  img        String?
  detail2    String?
  img2       String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
}

model AboutPersonal {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String?
  subTitle   String?
  detail1    String?
  img        String?
  img2       String?
  detail2    String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
}

model Article {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String?
  img        String?
  detail    String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
}


model Admin {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  adminusername String?
  adminpassword  String?
  sex String?
  tel String?
  email String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
  user  User[]

}
model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  fname String?
  lname String?
  nickname String?
  sex String?
  username String?
  password String?
  email String?
  line String?
  tel String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
  adminId String @db.ObjectId
  admin Admin? @relation(fields: [adminId], references: [id])
}